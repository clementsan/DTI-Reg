GetFilename(FixedVolumeHead ${fixedVolume} NAME_WITHOUT_EXTENSION)
GetFilename(MovingVolumeHead ${movingVolume} NAME_WITHOUT_EXTENSION)
GetFilename(OutputDir ${fixedVolume} PATH)

# FA map generation
set (Iteration 0)
set (InputFileList ${fixedVolume} ${movingVolume})
ForEach(InputFile ${InputFileList})
  GetFilename(InputFileHead ${InputFile} NAME_WITHOUT_EXTENSION)
  GetFilename(InputFileTail ${InputFile} NAME)
  echo()
  echo('FA map generation: ' ${InputFileTail})
  set (FAMap ${OutputDir}/${InputFileHead}_FA.nrrd)
  set (commanddtiprocess ${dtiprocessCmd} --dti_image ${InputFile} -f ${FAMap})
  If (${Iteration} == 0 && ${fixedMaskVolume} != '')
    set (commanddtiprocess ${dtiprocessCmd} --dti_image ${InputFile} -f ${FAMap} --mask ${fixedMaskVolume})
  EndIf (${Iteration})
  If (${Iteration} == 1 && ${movingMaskVolume} != '')
    set (commanddtiprocess ${dtiprocessCmd} --dti_image ${InputFile} -f ${FAMap} --mask ${movingMaskVolume})
  EndIf (${Iteration})
  Run (outputdtiprocess ${commanddtiprocess} errordtiprocess)
  If(${errordtiprocess} != '')
    echo('Error dtiprocess: ' ${errordtiprocess})
    exit()
  Endif(${errordtiprocess})
  Inc(${Iteration} 1)
  Int(${Iteration})
EndForEach(InputFile)

# Histogram matching
echo()
echo('Histogram matching...')
set (FixedFAMap ${OutputDir}/${FixedVolumeHead}_FA.nrrd)
set (MovingFAMap ${OutputDir}/${MovingVolumeHead}_FA.nrrd)
set (RescaledMovingFAMap ${OutputDir}/${MovingVolumeHead}_FA_irescaled.nrrd)
set (commandHistogramMatching ${HistogramMatchingCmd} ${MovingFAMap} ${FixedFAMap} ${RescaledMovingFAMap} --numberOfMatchPoints ${numberOfMatchPoints} --numberOfHistogramLevels ${numberOfHistogramLevels})
Run (outputHistogramMatching ${commandHistogramMatching} errorHistogramMatching)
If(${errorHistogramMatching} != '')
  echo('Error Histogram Matching: ' ${errorHistogramMatching})
  exit()
Endif()

# Registration via BRAINSFit (linear of BSpline)
If (${IsLinearRegistration} == 1 || ${warpingType} == 'BSpline')
  If (${linearRegType} == 'Rigid')
    set (TransformType 'Rigid')
    set (RegSuffix 'RReg')
  EndIf()
  If (${linearRegType} == 'Affine')
   set (TransformType 'Rigid,Affine')
   set (RegSuffix 'AffReg')
  EndIf()
  If (${warpingType} == 'BSpline')
    If (${linearRegType} == 'Rigid')
      set (TransformType 'Rigid,BSpline')
    EndIf()
    If (${linearRegType} == 'Affine')
      set (TransformType 'Rigid,Affine,BSpline')
    EndIf()
    If (${linearRegType} == 'None')
      set (TransformType 'BSpline')
    EndIf()
    set (RegSuffix 'BSpline')
  EndIf()
echo()
echo(${TransformType} ' registration...')
set (RegRescaledMovingFAMap ${OutputDir}/${MovingVolumeHead}_FA_irescaled_${RegSuffix}.nrrd)
set (Transform ${OutputDir}/${MovingVolumeHead}_${RegSuffix}.txt)
set (commandBRAINSFit ${BRAINSFitCmd} --fixedVolume ${FixedFAMap} --movingVolume ${RescaledMovingFAMap} --initializeTransformMode useCenterOfHeadAlign --outputTransform ${Transform} --outputVolume  ${RegRescaledMovingFAMap} --outputVolumePixelType ushort --transformType ${TransformType} --interpolationMode Linear)
Run (outputBRAINSFit ${commandBRAINSFit} errorBRAINSFit)
#If(${errorBRAINSFit} != '')
#  echo('Error BRAINSFit: ' ${errorBRAINSFit})
#  exit()
#Endif()
Endif()

# Warping
If (${IsDemonsWarping} == 1)
  echo()
  echo('Warping...')
  set (WarpRescaledMovingFAMap ${OutputDir}/${MovingVolumeHead}_FA_irescaled_warp.nrrd)
  set (DeformationField ${OutputDir}/${MovingVolumeHead}_warpfield.nrrd)
  If (${Transform} != '')
    set (commandBRAINSDemonWarp ${BRAINSDemonWarpCmd} --fixedVolume ${FixedFAMap} --movingVolume ${RescaledMovingFAMap} --outputVolume ${WarpRescaledMovingFAMap} --outputDeformationFieldVolume ${DeformationField} --outputPixelType ushort --interpolationMode Linear --registrationFilterType ${warpingType} --initializeWithTransform ${Transform})
  Else()
    set (commandBRAINSDemonWarp ${BRAINSDemonWarpCmd} --fixedVolume ${FixedFAMap} --movingVolume ${RescaledMovingFAMap} --outputVolume ${WarpRescaledMovingFAMap} --outputDeformationFieldVolume ${DeformationField} --outputPixelType ushort --interpolationMode Linear --registrationFilterType ${warpingType})
  EndIf()
  Run (outputBRAINSDemonWarp ${commandBRAINSDemonWarp} errorBRAINSDemonWarp)
  If(${errorBRAINSDemonWarp} != '')
    echo('Error BRAINSDemonWarp: ' ${errorBRAINSDemonWarp})
    exit()
  Endif()
Endif()

# DTI resampling
echo()
echo('DTI resampling...')
If (${IsDemonsWarping} == 1)
  set (commandResampleDTI ${ResampleDTICmd} ${movingVolume} ${outputVolume} --Reference ${fixedVolume} --defField ${DeformationField} --hfieldtype displacement)
Else()
  set (commandResampleDTI ${ResampleDTICmd} ${movingVolume} ${outputVolume} --Reference ${fixedVolume} --transformationFile ${Transform})
EndIf()
Run (outputResampleDTI ${commandResampleDTI} errorResampleDTI)
If(${errorResampleDTI} != '')
  echo('Error ResampleDTI: ' ${errorResampleDTI})
  exit()
Endif()
